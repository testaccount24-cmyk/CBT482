         MACRO
&LABEL   $PROLOG &LV=,&RENT=NO,&ERRCODE=,&C=,&SP=,&GM=,&LIST=NO
.**********************************************************************
.*                                                                    *
.*                                  CHANEY SYSTEMS SUPPORT, INC.      *
.*                                                                    *
.*       THIS MACRO PROVIDES STANDARD LINKAGE AND BASE REGISTER       *
.*       SPECIFICATIONS FOR MOST MEMBERS OF THE CSS TOOL KIT.         *
.*                                                                    *
.*       THE FIRST OPERERAND IS A POSITIONAL LIST OF REGISTERS        *
.*       TO BE USED AS BASE(S) FOR THE CSECT BEING DEFINED AND        *
.*       THE LABEL BECOMES THE CSECT NAME.                            *
.*                                                                    *
.*       LV=NNN    SPECIFIES AN ADDITIONAL AMOUNT OF STORAGE TO BE    *
.*                 GOTTEN FOLLOWING THE DYNAMIC SAVE AREA.  THIS      *
.*                 ADDITIONAL STORAGE IS ADDRESSED VIA REG 13         *
.*                 (JUST FOLLOWING THE 18 FULLWORD SAVEAREA) AND      *
.*                 IS LIMITED TO 4023.                                *
.*                                                                    *
.*       RENT=YES  IF USED, SPECIFIES THAT THE LENGTH OF ADDITIONAL   *
.*                 STORAGE IS DETERMINED BASED UPON THE SIZE OF       *
.*                 THE DYNAMIC STORAGE DEFINED BETWEEN TWO            *
.*                 LABELS:  "SAVEAREA" AND "WORKEND".  THE WORK       *
.*                 AREA IS ADDRESSABLE VIA REG 13 THE SAME AS THE     *
.*                 LV= OPERAND.  THE USER DEFINED CONSTANTS THAT      *
.*                 EXIST IN THE SOURCE ARE COPIED TO THE NEWLY        *
.*                 AQUIRED STORAGE AND ARE DIRECTLY ADDRESSABLE.      *
.*                 CAUTION: THE DYNAMIC AREA MUST BE DEFINED          *
.*                          "IMMEDIATELY PRIOR TO ANY DSECTS" AND     *
.*                          YOU MUST SPECIFY "LTORG" PRIOR TO THE     *
.*                          DEFINITION OF "SAVEAREA".                 *
.*                                                                    *
.*                 NOTE: LV= AND RENT=YES ARE MUTUALLY EXCLUSIVE.     *
.*                                                                    *
.*       ERRCODE=  SPECIFIES THE RETURN CODE TO BE RETURNED TO        *
.*                 THE CALLER IN THE EVENT THAT THE CONDITIONAL       *
.*                 GETMAIN FAILS.  IF SPECIFIED, THE GETMAIN THAT     *
.*                 IS ISSUED WILL BE CONDITIONAL AND IF IT DOES       *
.*                 NOT COMPLETE NORMALLY, THIS ERROR CODE WILL        *
.*                 BE RETURNED TO THE CALLER.  IF ERRCODE IS NOT      *
.*                 SPECIFIED, THE GETMAIN THAT IS ISSUED WILL BE      *
.*                 UNCONDITIONAL WITH A RELATED 80A ABEND IN THE      *
.*                 EVENT OF FAILURE.                                  *
.*                                                                    *
.*       SP=       IS USED TO CAUSE AN MVS SPLEVEL MACRO TO BE        *
.*                 EXECUTED AS PART OF THE ASSEMBLY.  POSSIBLE        *
.*                 OPTIONS ARE "1" (370) OR "2" (XA).  IF NOT         *
.*                 SPECIFIED, THE SPLEVEL MACRO IS NOT USED.          *
.*                                                                    *
.*       C=        IS A MEANS OF PROVIDING ADDITIONAL DATA IN THE     *
.*                 EYECATCHER.  IF USED, THE DATA SPECIFIED MUST      *
.*                 BE ENCLOSED WITHIN QUOTES AND IS LIMITED TO        *
.*                 46 CHARACTERS.                                     *
.*                                                                    *
.*       GM=NO     IS NOT SUPPORTED BY THIS MACRO BUT IS ALLOWED      *
.*                 FOR COMPATIBILITY OF OLDER VERSIONS.               *
.*                                                                    *
.*       LIST=NO   SUPPRESSES GENERATION OF LISTINGS FOR $PROLOG,     *
.*                 $EPILOG AND $REGS WHEN EXPANSION IS ACTIVE         *
.*                 (PRINT GEN).                                       *
.*                                                                    *
.*       EXAMPLES:                                                    *
.*                                                                    *
.*       SECTNAME $PROLOG ,        R12 IS BASE BY DEFAULT             *
.*       SECTNAME $PROLOG R12,R11  R12 IS 1ST BASE AND R11 IS SECOND  *
.*       SECTNAME $PROLOG R2,LV=8  R2 IS BASE AND AN ADDITIONAL       *
.*                                 8 BYTES ARE ADDED TO THE STORAGE   *
.*                                 GOTTEN FOR THE SAVEAREA.           *
.*                                                                    *
.*       SECTNAME $PROLOG RENT=YES R12 IS BASE AND THE ADDITIONAL     *
.*                                 STORAGE TO BE GOTTEN IS DEFINED    *
.*                                 BETWEEN "SAVEAREA" AND "WORKEND".  *
.*       SAVEAREA DS    9D         (SAVE AREA FOR $PROLOG GENERATION) *
.*       MYFIELD1 DC    CL8'DATA1' (PROGRAM CONSTANTS)                *
.*       MYFIELD2 DC    CL8'DATA2' (PROGRAM CONSTANTS)                *
.*       WORKEND  EQU   *          (END OF DYNAMIC WORK AREA)         *
.*                                                                    *
.**********************************************************************
         GBLA  &EPILOG             DEFINE GLOBAL FOR $EPILOG
         GBLB  &REGS,&LSAVE        DEFINE GLOBALS FOR $REGS/$EPILOG
         LCLA  &AA,&AB,&BUMP,&X    DEFINE LOCAL VARIABLES
         LCLC  &GMT,&BASE,&LISTOPT DEFINE LOCAL VARIABLES
&X       SETA  &SYSNDX             SET LABEL CONSTANT
&EPILOG  SETA  0                   RESET LV= GLOBAL
&BUMP    SETA  4096                SET FOR BASE REG BUMP
&LSAVE   SETB  0                   RESET RENT GLOBAL FOR $EPILOG
&GMT     SETC  'RU'                SET UNCONDITIONAL GETMAIN
         AIF   ('&LIST' EQ 'YES').LIST1
         PUSH PRINT
         PRINT OFF
.LIST1   ANOP
&LABEL   CSECT
         AIF   (T'&SP EQ 'O').GO1  IF NO SPLEVEL REQUIRED
         SPLEVEL SET=&SP           ISSUE USER REQUESTED SPLEVEL MACRO
.GO1     ANOP
         USING *,R15               TEMPORARY BASE
         B     $&X.A               BRANCH AROUND CONSTANTS
         DC    CL8'&LABEL'         PROVIDE EYECATCHER
         AIF   (T'&C EQ 'O').GO2   COMMENTS ADDITION?
         DC    CL46&C
.GO2     ANOP
         DC    C'&SYSDATE @ &SYSTIME' DATE/TIME STAMP OBJECT
         AIF   (T'&LV   EQ 'O').GO3 IF LV= NOT SPECIFIED
         AIF   ('&RENT' NE 'YES').GO3 RENT NOT ALSO SPECIFIED
         MNOTE 12,'$PROLOG - RENT=YES AND LV=&LV MUTUALLY EXCLUSIVE'
         MEXIT
.GO3     AIF   ('&RENT' EQ 'YES').GO4   RENT=YES SPECIFIED
         AIF   (T'&LV   NE 'O').GO4   LV= SPECIFIED
&LSAVE   SETB  1                   SET NORENT GLOBAL FOR $EPILOG
$AVE&X   DC    18F'0'              DEFINED SAVE AREA
.GO4     ANOP
         AIF   (T'&LABEL NE 'O').GO5 INSURE CSECT NAME PROVIDED
         MNOTE 8,'$PROLOG - CSECT NAME NOT SUPPLIED'
.GO5     ANOP
$&X.A    STM   R14,R12,12(R13)     SAVE CALLERS REGISTERS
&BASE    SETC  'R12'               ASSUME A BASE REGISTER
         AIF   (N'&SYSLIST EQ 0).GO6 USE DEFAULT IF NOT SPECIFIED
&BASE    SETC  '&SYSLIST(1)'       SET THE SPECIFIED BASE REGISTER
.GO6     ANOP
         LR    &BASE,R15           SET FIRST BASE REGISTER
         DROP  R15                 FREE THE TEMPORARY BASE
         USING &LABEL,&BASE        INFORM ASSEMBLER
         AIF   (N'&SYSLIST EQ 0).GO7
&AA      SETA  2                   NUMBER TO DEFINE +1
.LOOP    ANOP
         AIF   (&AA GT N'&SYSLIST).GO7
&AB      SETA  &AA-1               NUMBER OF LAST BASE REG DEFINED
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AB)) SET NEXT BASE REG
         LA    &SYSLIST(&AA),2048(&SYSLIST(&AA)) SET NEXT BASE REG
         USING &LABEL+&BUMP,&SYSLIST(&AA) INFORM THE ASSEMBLER
&BUMP    SETA  &BUMP+4096          BUMP INDEX
&AA      SETA  &AA+1               BUMP CONTROL COUNT
         AGO   .LOOP
.GO7     AIF   (T'&ERRCODE EQ 'O').GO8 IF ERROR CODE NOT SPECIFIED
&GMT     SETC  'RC'                ERROR CODE WAS SPECIFIED
.GO8     AIF   (T'&LV   NE 'O').GO10 LV= SPECIFIED, DO GETMAIN
         AIF   ('&RENT' EQ 'YES').GO12 RENT SPECIFIED, DO GETMAIN
         AIF   (T'&ERRCODE EQ 'O').GO9 IF ERROR CODE NOT SPECIFIED
      MNOTE 8,'$PROLOG - ERRCODE=&ERRCODE INVALID WITHOUT RENT=YES/LV='
.GO9     ANOP
$&X.B    LA    R2,$AVE&X           ADDRESS OF SAVE AREA
         AGO   .COMMON
.GO10    ANOP
&EPILOG  SETA  &LV+72              SET SIZE FOR $EPILOG FREEMAIN
         LA    R0,&LV+72           SET SIZE FOR GETMAIN
         GETMAIN &GMT,LV=(0)       GET STORAGE
         AIF   (T'&ERRCODE EQ 'O').GO11 IF UNCONDITIONAL
         LTR   R15,R15             STORAGE GOTTEN?
         BZ    $&X.C               YES, CONTINUE
         LA    R15,&ERRCODE        SET SPECIFIED ERROR CODE
         ST    R15,16(R13)         INTO SAVE AREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         BR    R14                 AND RETURN
$&X.C    DS    0H
.GO11    ANOP
         LR    R2,R1               SAVE THE GOTTEN STORAGE ADDRESS
         LR    R14,R2               MVCL - TARGET ADDR
         LA    R15,&LV+72           MVCL - TARGET SIZE
         SR    R0,R0                MVCL - SOURCE ADDR (NONE)
         SR    R1,R1                MVCL - SOURCE SIZE (NONE)
         MVCL  R14,R0              ZERO GOTTEN STORAGE
         AGO   .COMMON
.GO12    ANOP
$&X.B    GETMAIN &GMT,LV=WORKEND-SAVEAREA GET THE SAVE AREA STORAGE
         AIF   (T'&ERRCODE EQ 'O').GO13 IF UNCONDITIONAL
         LTR   R15,R15             STORAGE GOTTEN?
         BZ    $&X.C               YES, CONTINUE
         LA    R15,&ERRCODE        SET SPECIFIED ERROR CODE
         ST    R15,16(R13)         INTO SAVE AREA
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         BR    R14                 AND RETURN
$&X.C    DS    0H
.GO13    ANOP
         LR    R2,R1               SAVE THE GOTTEN STORAGE ADDRESS
         LR    R14,R2               MVCL - TARGET ADDR
         LA    R15,WORKEND-SAVEAREA MVCL - TARGET SIZE
         LA    R0,SAVEAREA          MVCL - SOURCE ADDR
         LR    R1,R15               MVCL - SOURCE SIZE
         MVCL  R14,R0              COPY TO WORKING STORAGE
         USING SAVEAREA,R13        PROVIDE ADDRESSABILITY
.COMMON  ANOP
         LR    R14,R13             COPY OLD SAVE AREA ADDRESS
         LR    R13,R2              SET NEW SAVEAREA ADDRESS
         ST    R14,4(R13)          CHAIN SAVEAREA - BACKWARD
         ST    R13,8(R14)          CHAIN SAVEAREA - FORWARD
         LM    R15,R2,16(R14)      RESTORE ENTRY REGISTERS
         SR    R14,R14             RESET RETURN ADDRESS
         AIF   (&REGS).SKIPREG
&LISTOPT SETC  'LIST=&LIST'
         $REGS &LISTOPT            DEFINE STANDARD REG EQUATES
.SKIPREG AIF   ('&LIST' EQ 'YES').MEXIT
         POP  PRINT
.MEXIT   ANOP
         MEND
